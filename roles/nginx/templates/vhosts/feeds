upstream backend_miniflux {
  server localhost:8280;
  keepalive 32;
}

server {
  listen 80;
  listen [::]:80;
  server_name {{ feeds_subdomain }}.{{ hetzner_dns_zone }};

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name {{ feeds_subdomain }}.{{ hetzner_dns_zone }};

  ssl_certificate /etc/letsencrypt/live/{{ feeds_subdomain }}.{{ hetzner_dns_zone }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ feeds_subdomain }}.{{ hetzner_dns_zone }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ feeds_subdomain }}.{{ hetzner_dns_zone }}/chain.pem;

  # Check country restrictions (defined in nginx.conf)
  if ($allowed_continent = no) {
    return 444;
  }

  if ($allowed_country = no) {
    # 444 is a custom nginx http return code,
    # it just closes the connection silently
    return 444;
  }

  location / {
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    #For Websockets, counterproductive without websockets
    #proxy_set_header Upgrade $http_upgrade;
    #proxy_set_header Connection "upgrade";

    proxy_pass http://backend_miniflux;
  }

  location /metrics {
    deny all;
  }
}
